name: Build and Check

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies 📦
        run: npm install

      - name: Build Express.js 🛠️
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:${{ github.sha }} .

      - name: Tag Docker image
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:latest

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:latest

      - name: Update v1.0 tag
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:v1.0
          docker push ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:v1.0

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to EC2
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

        run: |
          echo "$SSH_KEY" > $GITHUB_WORKSPACE/coffeeshopkey.pem
          chmod 600 $GITHUB_WORKSPACE/coffeeshopkey.pem
          ssh -o StrictHostKeyChecking=no -i $GITHUB_WORKSPACE/coffeeshopkey.pem ubuntu@ec2-16-171-16-255.eu-north-1.compute.amazonaws.com << 'EOF'
            docker stop $(docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:v1.0)
            docker rm $(docker ps -a -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:v1.0)
            docker rmi $(docker images -q --filter reference=${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:v1.0)
            docker pull ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:v1.0
            docker stop $(docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:v1.0)
            docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/coffeeshop-backend:v1.0
          EOF
